# ngcTestSuite v0.1.0
# Copyright (c) 2022 Austin Aigbe
# GTP/PFCP protocol tester for 4G/5G systems
# S11, S5, S1u, Sx, N3 and N4 interfaces

import socket
##from tkinter import *
##from tkinter import ttk

version = "0.1.0"
IpAddress = "127.0.0.1"
GTPv2Port = 2123

# Test messages for S11
# S11CreateSessionRequest = bytes([0x48, 0x20, 0x01,0x33, 0xa6, 0x1e, 0x7c, 0xb0, 0x25, 0xa8, 0x08, 0x00])
S11ModifyBearerRequest = 0
S11ReleaseAccessBearerRequest = 0

S11CreateSessionRequest = bytes([0x48, 0x20, 0x01, 0x33, 0xa6, 0x1e, 0x7c, 0xb0, 0x25, 0xa8, 0x08, 0x00, 0x01, 0x00, 0x08, 0x00,
                                 0x26, 0x31, 0x00, 0x92, 0x77, 0x06, 0x91, 0xf8, 0x4c, 0x00, 0x07, 0x00, 0x32, 0x84, 0x41, 0x69,
                                 0x31, 0x83, 0xf7, 0x4b, 0x00, 0x08, 0x00, 0x53, 0x12, 0x87, 0x31, 0x94, 0x92, 0x18, 0x87, 0x56,
                                 0x00, 0x0d, 0x00, 0x18, 0x26, 0xf1, 0x03, 0x2b, 0x39, 0x26, 0xf1, 0x03, 0x0d, 0xcc, 0x56, 0x03,
                                 0x53, 0x00, 0x03, 0x00, 0x26, 0xf1, 0x03, 0x52, 0x00, 0x01, 0x00, 0x06, 0x4d, 0x00, 0x02, 0x00,
                                 0x80, 0x08, 0x57, 0x00, 0x09, 0x00, 0x8a, 0x20, 0x1c, 0x35, 0x74, 0x0a, 0xd1, 0x2a, 0x88, 0x57,
                                 0x00, 0x09, 0x01, 0x87, 0x00, 0x00, 0x00, 0x00, 0x29, 0xce, 0x06, 0xe1, 0x47, 0x00, 0x2b, 0x00,
                                 0x03, 0x77, 0x65, 0x62, 0x04, 0x67, 0x70, 0x72, 0x73, 0x0a, 0x6d, 0x74, 0x6e, 0x6e, 0x69, 0x67,
                                 0x65, 0x72, 0x69, 0x61, 0x03, 0x6e, 0x65, 0x74, 0x06, 0x6d, 0x6e, 0x63, 0x30, 0x33, 0x30, 0x06,
                                 0x6d, 0x63, 0x63, 0x36, 0x32, 0x31, 0x04, 0x67, 0x70, 0x72, 0x73, 0x80, 0x00, 0x01, 0x00, 0x00,
                                 0x63, 0x00, 0x01, 0x00, 0x03, 0x4f, 0x00, 0x16, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
                                 0x00, 0x01, 0x00, 0x00, 0x48, 0x00, 0x08, 0x00, 0x00, 0x00, 0xc3, 0x50, 0x00, 0x02, 0x49, 0xf0,
                                 0x4e, 0x00, 0x2f, 0x00, 0x80, 0x80, 0x21, 0x10, 0x01, 0x01, 0x00, 0x10, 0x81, 0x06, 0x00, 0x00,
                                 0x00, 0x00, 0x83, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01,
                                 0x00, 0x00, 0x0c, 0x00, 0x00, 0x03, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x05, 0x00, 0x00, 0x11, 0x00,
                                 0x00, 0x10, 0x00, 0x5d, 0x00, 0x1f, 0x00, 0x49, 0x00, 0x01, 0x00, 0x06, 0x50, 0x00, 0x16, 0x00,
                                 0x44, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x94, 0x72, 0x00, 0x02, 0x00, 0x40,
                                 0x00, 0x5f, 0x00, 0x02, 0x00, 0x04, 0x00])


def start_udp():
    udp_client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    #udp_client.bind((IpAddress
    return udp_client
    
def test_s11_create_session_request():
    req = S11CreateSessionRequest
    res = 0
    return (req, res)
    
def test():
    req = buf
    res = 0
    return (req, res)

def start_tests():
    udp_client = start_udp()
    (req, expected_res) = test_s11_create_session_request()
    udp_client.sendto(req, (IpAddress, GTPv2Port))
    #(actual_res, addr) = udp_client.recvfrom(1024)
        

start_tests()


###########
# GUI
###########
##root = Tk()
##root.title("gtpTestSuite")
##frm = ttk.Frame(root, padding=10)
##frm.grid()
##
###helpMenu = ttk.Menubutton(frm, text="Help")
##menubar = Menu(root)
##m_help = Menu(menubar, tearoff=0)
##m_help.add_command(label="About")
##menubar.add_cascade(label="Help", menu=m_help)
##
##
##
##ttk.Label(frm, text="Interface").grid(column=0, row=0)
##ttk.Combobox(frm, values=["S11", "S5", "S1u","N3","N4"]).grid(column=1, row=0)
##ttk.Button(frm, text="Quit", command=root.destroy).grid(column=2, row=0)
##
##root.config(menu=menubar)
##root.mainloop()
